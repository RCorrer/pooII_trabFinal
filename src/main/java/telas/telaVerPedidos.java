/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pizzaria.controller.ClienteController;
import pizzaria.controller.PedidoController;
import pizzaria.enums.StatusPedido;
import pizzaria.model.Cliente;
import pizzaria.model.Pedido;
import pizzaria.view.tableModelCLientePedidos;

/**
 *
 * @author joaow
 */
public class telaVerPedidos extends javax.swing.JFrame {

    /**
     * Creates new form telaVerPedidos
     */
    public telaVerPedidos() {
        initComponents();
    }
    
    private tableModelCLientePedidos TabelaModelPedidos = new tableModelCLientePedidos();
    private Cliente clienteSelecionado;
    private Pedido pedidoSelecionado;
    private int linhaSelecionada;
    
    //lista que vai pegar os pedidos atuais
    List<Pedido> listaPopular = new ArrayList<Pedido>();
    
    private PedidoController pedidoController = new PedidoController();
    private ClienteController clienteController = new ClienteController();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JScrollPane();
        tablClientePedido = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnFinalizarPedido = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        boxStatus = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tablClientePedido.setModel(TabelaModelPedidos);
        tablClientePedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablClientePedidoMouseClicked(evt);
            }
        });
        Panel.setViewportView(tablClientePedido);

        jLabel1.setText("Cliente:");

        labelNome.setText(" ");

        jLabel2.setText("Status:");

        btnFinalizarPedido.setText("Finalizar Pedido");
        btnFinalizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarPedidoActionPerformed(evt);
            }
        });

        jButton1.setText("Voltar ao Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        boxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        boxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxStatusActionPerformed(evt);
            }
        });

        jButton2.setText("Atualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnFinalizarPedido)
                                    .addComponent(boxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(labelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2))))
                        .addGap(18, 18, 18)
                        .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNome)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFinalizarPedido)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        //popular tabela
        this.atualizarLista();
        this.TabelaModelPedidos.setListaPedidos(listaPopular);
        
        //popular box de status
        String[] status = {"ABERTO", "CAMINHO", "ENTREGUE"};
            for (String estado : status) {
            boxStatus.addItem(estado);
        }
        
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //ir para o menu inicial
        new telaMenuInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarPedidoActionPerformed
        // TODO add your handling code here:
        // finalizar o pedido limpando a tabela de pizzas e resetando o status, apenas se o status estiver entregue
        
        Pedido p = this.pedidoSelecionado;
        String status = p.getStatus().toString();
        if (status == "ENTREGUE"){
            this.TabelaModelPedidos.setListaPedidos(listaPopular);
            
            StatusPedido estadoAtual = p.getStatus();
            for (int i = 0; i < boxStatus.getItemCount(); i++) {
                if (boxStatus.getItemAt(i).equals(estadoAtual.name())) {
                    boxStatus.setSelectedIndex(i);
                    break;
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "VOCE SO PODE FINALIZAR UM PEDIDO QUE JÁ FOI ENTREGUE.\n", "FINALIZAR INVÁLIDO", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnFinalizarPedidoActionPerformed

    private void tablClientePedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablClientePedidoMouseClicked
        // pegar cliente clicado
        linhaSelecionada = this.tablClientePedido.rowAtPoint(evt.getPoint());
        Pedido p = this.TabelaModelPedidos.getPedido(linhaSelecionada);
        this.pedidoSelecionado = p;
        ClienteController clienteController = new ClienteController();
        Cliente c = null;
        try {
            c = this.clienteController.buscarClientePorId(p.getClienteId());
        } catch (SQLException ex) {
            System.out.println("ERRO AO PEGAR NOME DO CLIENTE\n" + ex);
        }
        //mostrar dados nas labels
        labelNome.setText(c.getNome());
        
        StatusPedido estadoAtual = p.getStatus();
        for (int i = 0; i < boxStatus.getItemCount(); i++) {
            if (boxStatus.getItemAt(i).equals(estadoAtual.name())) {
                boxStatus.setSelectedIndex(i);
                break;
            }
        }
      
    }//GEN-LAST:event_tablClientePedidoMouseClicked

    private void boxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxStatusActionPerformed
        // setar estado do pedido
        
        Pedido p  = this.pedidoSelecionado;
        
        if (p != null){
        
        String statusBox = boxStatus.getSelectedItem().toString().trim();
        String statusBoxAntiga = statusBox;
        if (statusBox.equals("ABERTO")) {
             p.setStatus(StatusPedido.ABERTO);
        } else if (statusBox.equals("CAMINHO")) {
            p.setStatus(StatusPedido.CAMINHO);
        } else if (statusBox.equals("ENTREGUE")) {
            p.setStatus(StatusPedido.ENTREGUE);
        } else {
            System.out.println("ERRO: Status não reconhecido");
        }
        }
        

    }//GEN-LAST:event_boxStatusActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // atualizar a tabela e o pedido
        Pedido p = pedidoSelecionado;
        if ( p != null){
            try {
                pedidoController.atualizarStatusPedido(p.getId(), p.getStatus());
                atualizarLista();
                this.TabelaModelPedidos.setListaPedidos(listaPopular);
            } catch (SQLException ex){
                System.out.println("ERRO AO ATUALIZAR STATUS\n" + ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "SELECIONE UM PEDIDO PRIMEIRO.\n", "SELECIONE UM PEDIDO", JOptionPane.INFORMATION_MESSAGE);
            

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaVerPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaVerPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaVerPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaVerPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaVerPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Panel;
    private javax.swing.JComboBox<String> boxStatus;
    private javax.swing.JButton btnFinalizarPedido;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelNome;
    private javax.swing.JTable tablClientePedido;
    // End of variables declaration//GEN-END:variables

    private void atualizarLista(){
        try {
            listaPopular.clear();
            for (Cliente c : clienteController.listarClientes()){
                for (Pedido p : pedidoController.listarPedidosPorCliente(c.getId())){
                    listaPopular.add(p);
            }
         } 
        } catch (SQLException ex){
            System.out.println("ERRO AO INICIALIZAR A LISTA");
        }
    }

}
